name: Rust

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
permissions:
  contents: write
env:
  CARGO_TERM_COLOR: always

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false
  build_release:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            release_suffix: linux
            release_extension: "-linux"
          - os: macos-latest
            release_suffix: mac
            release_extension: "-mac"
          - os: windows-latest
            release_suffix: win
            release_extension: ".exe"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: cargo build --release && mkdir -p target/release/linux && cp target/release/openapi-cat target/release/linux/openapi-cat-linux
      - name: Run Mac Build
        if: matrix.os == 'macos-latest'
        run: cargo build --release && mkdir -p target/release/mac && cp target/release/openapi-cat target/release/mac/openapi-cat-mac
      - name: Run Windows Build
        if: matrix.os == 'windows-latest'
        run: cargo build --release && mkdir -p target/release/win && cp target/release/openapi-cat.exe target/release/win/openapi-cat.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: target/release/${{ matrix.release_suffix }}/openapi-cat${{ matrix.release_extension }}